{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Fabian\\\\source\\\\repos\\\\SalaryCalculator\\\\salarycalulator-reactapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Fabian\\\\source\\\\repos\\\\SalaryCalculator\\\\salarycalulator-reactapp\\\\src\\\\components\\\\SalaryCalculator\\\\Calculator\\\\Calculator.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport axios from '../../../axios-order';\nimport { isNullOrUndefined } from 'util';\nimport { Spinner } from 'reactstrap';\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\nimport './Calculator.css';\nimport CalculatorForm from '.././CalculatorForm/CalculatorForm';\nimport CalculatorSummary from '../CalculatorSummary/CalculatorSummary'; //import withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\n\nimport GeneralModal from '../../UI/GeneralModal/GeneralModal';\n\nclass Calculator extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      summary: {\n        workingHoursInMonth: 0,\n        workedHours: 0,\n        hourlyFee: 0,\n        overHoursAmount: 0,\n        overHoursGrossIncome: 0,\n        overHoursNetIncome: 0,\n        totalGrossIncome: 0,\n        totalNetIncome: 0,\n        monthName: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n        workedMonth: 1,\n        monthsWorkingHours: []\n      },\n      errorMessage: '',\n      isSummaryVisible: false,\n      workedMonth: 1,\n      isLoading: true\n    };\n\n    this.componentDidMount = () => {\n      axios.get('/SalaryCalculator').then(response => {\n        this.setState(prevState => ({\n          summary: _objectSpread({}, prevState.summary, {\n            monthsWorkingHours: response.data\n          })\n        }));\n        this.setState({\n          isLoading: false\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.handleSelectChange = selectedValue => {\n      this.setState({\n        workedMonth: parseInt(selectedValue) + 1\n      });\n    };\n\n    this.handleSubmitForm = formFields => {\n      this.setState({\n        errorMessage: null\n      });\n      formFields.workedHours = parseInt(formFields.workedHoursInput);\n      formFields.hourlyFee = parseInt(formFields.hourlyFeeInput);\n      axios.post('/salarycalculator', formFields).then(response => {\n        this.setState(prevState => ({\n          summary: _objectSpread({}, prevState.summary, {\n            workedMonth: formFields.workedMonth,\n            workedHours: formFields.workedHoursInput,\n            hourlyFee: formFields.hourlyFeeInput,\n            overHoursAmount: response.data.overHoursAmount,\n            overHoursGrossIncome: response.data.overHoursGrossIncome,\n            overHoursNetIncome: response.data.overHoursNetIncome,\n            totalGrossIncome: response.data.totalGrossIncome,\n            totalNetIncome: response.data.totalNetIncome\n          })\n        }));\n        this.setState({\n          isSummaryVisible: true\n        });\n      }).catch(error => {\n        if (!isNullOrUndefined(error.response.data.message)) {\n          this.setState({\n            errorMessage: error.response.data.message\n          });\n        }\n      });\n    };\n\n    this.handleReset = () => {\n      this.setState({\n        errorMessage: null,\n        isSummaryVisible: false\n      });\n    };\n  }\n\n  render() {\n    let calculatorContent = null;\n\n    if (this.state.isLoading) {\n      calculatorContent = React.createElement(Spinner, {\n        animation: \"border\",\n        variant: \"primary\",\n        className: \"spinner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      });\n    } else {\n      calculatorContent = React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(CalculatorForm, {\n        monthName: this.state.summary.monthName,\n        errorMessage: this.state.errorMessage,\n        monthsWorkingHours: this.state.summary.monthsWorkingHours,\n        handleSubmitForm: this.handleSubmitForm,\n        handleReset: this.handleReset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(GeneralModal, {\n        showModal: this.state.isSummaryVisible,\n        modalClosed: this.handleReset,\n        title: \"Summary\",\n        buttonName: \"Ok\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(CalculatorSummary, {\n        summaryFactors: this.state.summary,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      })));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Salary Calculator\"), calculatorContent);\n  }\n\n} //export default withErrorHandler(Calculator, axios);\n\n\nexport default Calculator;","map":{"version":3,"sources":["C:/Users/Fabian/source/repos/SalaryCalculator/salarycalulator-reactapp/src/components/SalaryCalculator/Calculator/Calculator.js"],"names":["React","Component","axios","isNullOrUndefined","Spinner","Aux","CalculatorForm","CalculatorSummary","GeneralModal","Calculator","state","summary","workingHoursInMonth","workedHours","hourlyFee","overHoursAmount","overHoursGrossIncome","overHoursNetIncome","totalGrossIncome","totalNetIncome","monthName","workedMonth","monthsWorkingHours","errorMessage","isSummaryVisible","isLoading","componentDidMount","get","then","response","setState","prevState","data","catch","error","console","log","handleSelectChange","selectedValue","parseInt","handleSubmitForm","formFields","workedHoursInput","hourlyFeeInput","post","message","handleReset","render","calculatorContent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from '../../../axios-order';\r\nimport { isNullOrUndefined } from 'util';\r\nimport { Spinner } from 'reactstrap';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\nimport './Calculator.css';\r\nimport CalculatorForm from '.././CalculatorForm/CalculatorForm';\r\nimport CalculatorSummary from '../CalculatorSummary/CalculatorSummary';\r\n//import withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport GeneralModal from '../../UI/GeneralModal/GeneralModal';\r\n\r\n\r\nclass Calculator extends Component {\r\n    state = {\r\n        summary: {\r\n            workingHoursInMonth: 0,\r\n            workedHours: 0,\r\n            hourlyFee: 0,\r\n            overHoursAmount: 0,\r\n            overHoursGrossIncome: 0,\r\n            overHoursNetIncome: 0,\r\n            totalGrossIncome: 0,\r\n            totalNetIncome: 0,\r\n            monthName: [\r\n                'January', 'February', 'March', 'April', 'May', 'June',\r\n                'July', 'August', 'September', 'October', 'November', 'December'\r\n            ],\r\n            workedMonth: 1,\r\n            monthsWorkingHours: [],\r\n        },\r\n        errorMessage: '',\r\n        isSummaryVisible: false,\r\n        workedMonth: 1,\r\n        isLoading: true\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        axios.get('/SalaryCalculator')\r\n            .then(response => {\r\n                this.setState(prevState => ({\r\n                    summary: {\r\n                        ...prevState.summary,\r\n                        monthsWorkingHours: response.data\r\n                    }\r\n                }))\r\n                this.setState({ isLoading: false });\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    handleSelectChange = (selectedValue) => {\r\n        this.setState({\r\n            workedMonth: parseInt(selectedValue) + 1\r\n        });\r\n    }\r\n\r\n    handleSubmitForm = (formFields) => {\r\n        this.setState({\r\n            errorMessage: null,\r\n        });\r\n        formFields.workedHours = parseInt(formFields.workedHoursInput);\r\n        formFields.hourlyFee = parseInt(formFields.hourlyFeeInput);\r\n        axios.post('/salarycalculator', formFields)\r\n            .then(response => {\r\n                this.setState(prevState => ({\r\n                    summary: {\r\n                        ...prevState.summary,\r\n                        workedMonth: formFields.workedMonth,\r\n                        workedHours: formFields.workedHoursInput,\r\n                        hourlyFee: formFields.hourlyFeeInput,\r\n                        overHoursAmount: response.data.overHoursAmount,\r\n                        overHoursGrossIncome: response.data.overHoursGrossIncome,\r\n                        overHoursNetIncome: response.data.overHoursNetIncome,\r\n                        totalGrossIncome: response.data.totalGrossIncome,\r\n                        totalNetIncome: response.data.totalNetIncome\r\n                    }\r\n                }))\r\n                this.setState({ isSummaryVisible: true })\r\n            })\r\n            .catch(error => {\r\n                if (!isNullOrUndefined(error.response.data.message)) {\r\n                    this.setState({ errorMessage: error.response.data.message })\r\n                }\r\n            })\r\n    }\r\n\r\n    handleReset = () => {\r\n        this.setState({\r\n            errorMessage: null,\r\n            isSummaryVisible: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let calculatorContent = null;\r\n        if (this.state.isLoading) {\r\n            calculatorContent = (\r\n                <Spinner animation=\"border\" variant=\"primary\" className=\"spinner\" />\r\n            )\r\n        } else {\r\n            calculatorContent = (\r\n                <Aux>\r\n                    <CalculatorForm\r\n                        monthName={this.state.summary.monthName}\r\n                        errorMessage={this.state.errorMessage}\r\n                        monthsWorkingHours={this.state.summary.monthsWorkingHours}\r\n                        handleSubmitForm={this.handleSubmitForm}\r\n                        handleReset={this.handleReset}\r\n                    />\r\n                    <GeneralModal\r\n                        showModal={this.state.isSummaryVisible}\r\n                        modalClosed={this.handleReset}\r\n                        title=\"Summary\"\r\n                        buttonName=\"Ok\"\r\n                    >\r\n                        <CalculatorSummary\r\n                            summaryFactors={this.state.summary}\r\n                        />\r\n                    </GeneralModal>\r\n                </Aux>\r\n            );\r\n        }\r\n        return (\r\n            <div>\r\n                <h1>Salary Calculator</h1>\r\n                {calculatorContent}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//export default withErrorHandler(Calculator, axios);\r\nexport default Calculator;"]},"metadata":{},"sourceType":"module"}