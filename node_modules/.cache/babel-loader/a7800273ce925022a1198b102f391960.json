{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fabian\\\\source\\\\repos\\\\SalaryCalculator\\\\salarycalulator-reactapp\\\\src\\\\components\\\\SalaryCalculator\\\\Calculator\\\\Calculator.js\";\nimport React, { Component } from 'react';\nimport axios from '../../../axios-order';\nimport { isNullOrUndefined } from 'util';\nimport { Spinner } from 'reactstrap';\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\nimport './Calculator.css';\nimport CalculatorForm from '.././CalculatorForm/CalculatorForm';\nimport CalculatorSummary from '../CalculatorSummary/CalculatorSummary'; //import withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\n\nimport GeneralModal from '../../UI/GeneralModal/GeneralModal';\n\nclass Calculator extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      monthsWorkingHours: [],\n      workingHoursInMonth: 0,\n      errorMessage: '',\n      isSummaryVisible: false,\n      workedMonth: 1,\n      workedHours: 0,\n      hourlyFee: 0,\n      overHoursAmount: 0,\n      overHoursGrossIncome: 0,\n      overHoursNetIncome: 0,\n      totalGrossIncome: 0,\n      totalNetIncome: 0,\n      monthName: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n      isLoading: true\n    };\n\n    this.componentDidMount = () => {\n      axios.get('/SalaryCalculator').then(response => {\n        this.setState({\n          monthsWorkingHours: response.data,\n          isLoading: false\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.handleSelectChange = selectedValue => {\n      this.setState({\n        workedMonth: parseInt(selectedValue) + 1\n      });\n    };\n\n    this.handleSubmitForm = formFields => {\n      this.setState({\n        errorMessage: null\n      });\n      formFields.workedHours = parseInt(formFields.workedHoursInput);\n      formFields.hourlyFee = parseInt(formFields.hourlyFeeInput);\n      axios.post('/salarycalculator', formFields).then(response => {\n        console.log(response.data);\n        this.setState({\n          workedMonth: formFields.workedMonth,\n          workedHours: formFields.workedHoursInput,\n          hourlyFee: formFields.hourlyFeeInput,\n          overHoursAmount: response.data.overHoursAmount,\n          overHoursGrossIncome: response.data.overHoursGrossIncome,\n          overHoursNetIncome: response.data.overHoursNetIncome,\n          totalGrossIncome: response.data.totalGrossIncome,\n          totalNetIncome: response.data.totalNetIncome,\n          isSummaryVisible: true\n        });\n      }).catch(error => {\n        if (!isNullOrUndefined(error.response.data.message)) {\n          this.setState({\n            errorMessage: error.response.data.message\n          });\n        }\n\n        console.log(error.response);\n      });\n    };\n\n    this.handleReset = () => {\n      this.setState({\n        errorMessage: null,\n        isSummaryVisible: false\n      });\n    };\n  }\n\n  render() {\n    let calculatorContent = null;\n\n    if (this.state.isLoading) {\n      calculatorContent = React.createElement(Spinner, {\n        animation: \"border\",\n        variant: \"primary\",\n        className: \"spinner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      });\n    } else {\n      calculatorContent = React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(CalculatorForm, {\n        monthName: this.state.monthName,\n        errorMessage: this.state.errorMessage,\n        monthsWorkingHours: this.state.monthsWorkingHours,\n        handleSubmitForm: this.handleSubmitForm,\n        handleReset: this.handleReset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(GeneralModal, {\n        showModal: this.state.isSummaryVisible,\n        modalClosed: this.handleReset,\n        title: \"Summary\",\n        buttonName: \"Ok\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(CalculatorSummary, {\n        workedMonthName: this.state.monthName[this.state.workedMonth - 1],\n        workingHoursInMonth: this.state.monthsWorkingHours[this.state.workedMonth - 1],\n        workedHours: this.state.workedHours,\n        hourlyFee: this.state.hourlyFee,\n        overHoursAmount: this.state.overHoursAmount,\n        overHoursGrossIncome: this.state.overHoursGrossIncome,\n        overHoursNetIncome: this.state.overHoursNetIncome,\n        totalGrossIncome: this.state.totalGrossIncome,\n        totalNetIncome: this.state.totalNetIncome,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Salary Calculator\"), calculatorContent);\n  }\n\n} //export default withErrorHandler(Calculator, axios);\n\n\nexport default Calculator;","map":{"version":3,"sources":["C:/Users/Fabian/source/repos/SalaryCalculator/salarycalulator-reactapp/src/components/SalaryCalculator/Calculator/Calculator.js"],"names":["React","Component","axios","isNullOrUndefined","Spinner","Aux","CalculatorForm","CalculatorSummary","GeneralModal","Calculator","state","monthsWorkingHours","workingHoursInMonth","errorMessage","isSummaryVisible","workedMonth","workedHours","hourlyFee","overHoursAmount","overHoursGrossIncome","overHoursNetIncome","totalGrossIncome","totalNetIncome","monthName","isLoading","componentDidMount","get","then","response","setState","data","catch","error","console","log","handleSelectChange","selectedValue","parseInt","handleSubmitForm","formFields","workedHoursInput","hourlyFeeInput","post","message","handleReset","render","calculatorContent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from '../../../axios-order';\r\nimport { isNullOrUndefined } from 'util';\r\nimport { Spinner } from 'reactstrap';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\nimport './Calculator.css';\r\nimport CalculatorForm from '.././CalculatorForm/CalculatorForm';\r\nimport CalculatorSummary from '../CalculatorSummary/CalculatorSummary';\r\n//import withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport GeneralModal from '../../UI/GeneralModal/GeneralModal';\r\n\r\n\r\nclass Calculator extends Component {\r\n    state = {\r\n        monthsWorkingHours: [],\r\n        workingHoursInMonth: 0,\r\n        errorMessage: '',\r\n        isSummaryVisible: false,\r\n        workedMonth: 1,\r\n        workedHours: 0,\r\n        hourlyFee: 0,\r\n        overHoursAmount: 0,\r\n        overHoursGrossIncome: 0,\r\n        overHoursNetIncome: 0,\r\n        totalGrossIncome: 0,\r\n        totalNetIncome: 0,\r\n        monthName: [\r\n            'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'\r\n        ],\r\n        isLoading: true\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        axios.get('/SalaryCalculator')\r\n            .then(response => {\r\n                this.setState({\r\n                    monthsWorkingHours: response.data,\r\n                    isLoading: false\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    handleSelectChange = (selectedValue) => {\r\n        this.setState({\r\n            workedMonth: parseInt(selectedValue) + 1\r\n        });\r\n    }\r\n\r\n    handleSubmitForm = (formFields) => {\r\n        this.setState({\r\n            errorMessage: null,\r\n        });\r\n        formFields.workedHours = parseInt(formFields.workedHoursInput);\r\n        formFields.hourlyFee = parseInt(formFields.hourlyFeeInput);\r\n        axios.post('/salarycalculator', formFields)\r\n            .then(response => {\r\n                console.log(response.data)\r\n                this.setState({\r\n                    workedMonth: formFields.workedMonth,\r\n                    workedHours: formFields.workedHoursInput,\r\n                    hourlyFee: formFields.hourlyFeeInput,\r\n                    overHoursAmount: response.data.overHoursAmount,\r\n                    overHoursGrossIncome: response.data.overHoursGrossIncome,\r\n                    overHoursNetIncome: response.data.overHoursNetIncome,\r\n                    totalGrossIncome: response.data.totalGrossIncome,\r\n                    totalNetIncome: response.data.totalNetIncome,\r\n                    isSummaryVisible: true\r\n                })\r\n            })\r\n            .catch(error => {\r\n                if (!isNullOrUndefined(error.response.data.message)) {\r\n                    this.setState({ errorMessage: error.response.data.message })\r\n                }\r\n                console.log(error.response);\r\n            })\r\n\r\n    }\r\n\r\n    handleReset = () => {\r\n        this.setState({\r\n            errorMessage: null,\r\n            isSummaryVisible: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let calculatorContent = null;\r\n        if (this.state.isLoading) {\r\n            calculatorContent = (\r\n                <Spinner animation=\"border\" variant=\"primary\" className=\"spinner\" />\r\n            )\r\n        } else {\r\n            calculatorContent = (\r\n                <Aux>\r\n                    <CalculatorForm\r\n                        monthName={this.state.monthName}\r\n                        errorMessage={this.state.errorMessage}\r\n                        monthsWorkingHours={this.state.monthsWorkingHours}\r\n                        handleSubmitForm={this.handleSubmitForm}\r\n                        handleReset={this.handleReset}\r\n                    />\r\n                    <GeneralModal\r\n                        showModal={this.state.isSummaryVisible}\r\n                        modalClosed={this.handleReset}\r\n                        title=\"Summary\"\r\n                        buttonName=\"Ok\">\r\n                        <CalculatorSummary\r\n                            workedMonthName={this.state.monthName[this.state.workedMonth - 1]}\r\n                            workingHoursInMonth={this.state.monthsWorkingHours[this.state.workedMonth - 1]}\r\n                            workedHours={this.state.workedHours}\r\n                            hourlyFee={this.state.hourlyFee}\r\n                            overHoursAmount={this.state.overHoursAmount}\r\n                            overHoursGrossIncome={this.state.overHoursGrossIncome}\r\n                            overHoursNetIncome={this.state.overHoursNetIncome}\r\n                            totalGrossIncome={this.state.totalGrossIncome}\r\n                            totalNetIncome={this.state.totalNetIncome}\r\n                        />\r\n                    </GeneralModal>\r\n                </Aux>\r\n            );\r\n        }\r\n        return (\r\n            <div>\r\n                <h1>Salary Calculator</h1>\r\n                {calculatorContent}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//export default withErrorHandler(Calculator, axios);\r\nexport default Calculator;"]},"metadata":{},"sourceType":"module"}