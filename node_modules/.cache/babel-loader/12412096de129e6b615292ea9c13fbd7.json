{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Fabian\\\\source\\\\repos\\\\SalaryCalculator\\\\salarycalulator-reactapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Fabian\\\\source\\\\repos\\\\SalaryCalculator\\\\salarycalulator-reactapp\\\\src\\\\components\\\\CalculatorInputs\\\\CalculatorInputs.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport Axios from 'axios';\nimport CalculatorSummary from '../CalculatorSummary/CalculatorSummary';\n\nclass CalculatorInputs extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      errorMessage: '',\n      dataSumbit: false,\n      overHoursAmount: 0,\n      overHoursGrossIncome: 0,\n      overHoursNetIncome: 0,\n      totalGrossIncome: 0,\n      totalNetIncome: 0,\n      monthName: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n    };\n  }\n\n  handleChange(e) {\n    this.setState({\n      obj: this.props.listOption[e.target.value].obj\n    });\n  }\n\n  render() {\n    return React.createElement(Formik, {\n      initialValues: {\n        workedMonth: 1,\n        workedHours: 0,\n        hourlyFee: 0\n      },\n      validationSchema: Yup.object().shape({\n        workedHours: Yup.string().required('Worked hours is required'),\n        hourlyFee: Yup.string().required('Hourly fee is required')\n      }),\n      onSubmit: fields => {\n        let intFields = _objectSpread({}, fields);\n\n        intFields.workedMonth = parseInt(intFields.workedMonth);\n        intFields.workedHours = parseInt(intFields.workedHours);\n        intFields.hourlyFee = parseInt(intFields.hourlyFee);\n        Axios.post('http://192.168.0.5:5000/salarycalculator', intFields).then(response => {\n          console.log(response.data);\n          this.setState({\n            dataSumbit: true,\n            workedMonth: intFields.workedMonth,\n            workedHours: intFields.workedHours,\n            hourlyFee: intFields.hourlyFee,\n            overHoursAmount: response.data.overHoursAmount,\n            overHoursGrossIncome: response.data.overHoursGrossIncome,\n            overHoursNetIncome: response.data.overHoursNetIncome,\n            totalGrossIncome: response.data.totalGrossIncome,\n            totalNetIncome: response.data.totalNetIncome\n          });\n        }).catch(error => {\n          this.setState({\n            errorMessage: error.response.data.message\n          });\n        });\n      },\n      render: ({\n        errors,\n        status,\n        touched\n      }) => React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"workedMonth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Worked Month: \"), React.createElement(Field, {\n        as: \"select\",\n        name: \"workedMonth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, this.state.listOption.map((option, index) => React.createElement(\"option\", {\n        key: index,\n        value: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, option.name))))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"workedHours\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Worked Hours: \"), React.createElement(Field, {\n        name: \"workedHours\",\n        type: \"text\",\n        className: 'form-control' + (errors.workedHours && touched.workedHours ? ' is-invalid' : ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"hourlyFee\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Hourly Fee: \"), React.createElement(Field, {\n        name: \"hourlyFee\",\n        type: \"text\",\n        className: 'form-control' + (errors.hourlyFee && touched.hourlyFee ? ' is-invalid' : ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary mr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Calculate\"), React.createElement(\"button\", {\n        type: \"reset\",\n        className: \"btn btn-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Reset\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(ErrorMessage, {\n        name: \"workedMonth\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(ErrorMessage, {\n        name: \"workedHours\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(ErrorMessage, {\n        name: \"hourlyFee\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, this.state.errorMessage, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, this.state.dataSumbit ? React.createElement(CalculatorSummary, {\n        workedMonthName: this.state.monthName[this.state.workedMonth - 1],\n        workedHoursInMonth: this.state.workedHoursInMonth,\n        workedHours: this.state.workedHours,\n        hourlyFee: this.state.hourlyFee,\n        overHoursAmount: this.state.overHoursAmount,\n        overHoursGrossIncome: this.state.overHoursGrossIncome,\n        overHoursAmount: this.state.overHoursAmount,\n        overHoursNetIncome: this.state.overHoursNetIncome,\n        totalGrossIncome: this.state.totalGrossIncome,\n        totalNetIncome: this.state.totalNetIncome,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }) : \"\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default CalculatorInputs;","map":{"version":3,"sources":["C:/Users/Fabian/source/repos/SalaryCalculator/salarycalulator-reactapp/src/components/CalculatorInputs/CalculatorInputs.js"],"names":["React","Component","Formik","Field","Form","ErrorMessage","Yup","Axios","CalculatorSummary","CalculatorInputs","state","errorMessage","dataSumbit","overHoursAmount","overHoursGrossIncome","overHoursNetIncome","totalGrossIncome","totalNetIncome","monthName","handleChange","e","setState","obj","props","listOption","target","value","render","workedMonth","workedHours","hourlyFee","object","shape","string","required","fields","intFields","parseInt","post","then","response","console","log","data","catch","error","message","errors","status","touched","map","option","index","name","workedHoursInMonth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Axios from 'axios';\r\n\r\nimport CalculatorSummary from '../CalculatorSummary/CalculatorSummary'\r\n\r\nclass CalculatorInputs extends Component {\r\n    state = {\r\n        errorMessage: '',\r\n        dataSumbit: false,\r\n        overHoursAmount: 0,\r\n        overHoursGrossIncome: 0,\r\n        overHoursNetIncome: 0,\r\n        totalGrossIncome: 0,\r\n        totalNetIncome: 0,\r\n        monthName: [\r\n            'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'\r\n        ]\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({obj: this.props.listOption[e.target.value].obj})\r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <Formik\r\n                initialValues={{\r\n                    workedMonth: 1,\r\n                    workedHours: 0,\r\n                    hourlyFee: 0\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    workedHours: Yup.string()\r\n                        .required('Worked hours is required'),\r\n                    hourlyFee: Yup.string()\r\n                        .required('Hourly fee is required'),\r\n                })}\r\n                onSubmit={fields => {\r\n                    let intFields = {\r\n                        ...fields\r\n                    };\r\n                    intFields.workedMonth = parseInt(intFields.workedMonth);\r\n                    intFields.workedHours = parseInt(intFields.workedHours);\r\n                    intFields.hourlyFee = parseInt(intFields.hourlyFee);\r\n\r\n                    Axios.post('http://192.168.0.5:5000/salarycalculator', intFields)\r\n                        .then(response => {\r\n                            console.log(response.data)\r\n                            this.setState({\r\n                                dataSumbit: true,\r\n                                workedMonth: intFields.workedMonth,\r\n                                workedHours: intFields.workedHours,\r\n                                hourlyFee: intFields.hourlyFee,\r\n                                overHoursAmount: response.data.overHoursAmount,\r\n                                overHoursGrossIncome: response.data.overHoursGrossIncome,\r\n                                overHoursNetIncome: response.data.overHoursNetIncome,\r\n                                totalGrossIncome: response.data.totalGrossIncome,\r\n                                totalNetIncome: response.data.totalNetIncome\r\n                            })\r\n                        })\r\n                        .catch(error => {\r\n                            this.setState({ errorMessage: error.response.data.message })\r\n                        })\r\n                }}\r\n                render={({ errors, status, touched }) => (\r\n                    <Form>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"workedMonth\">Worked Month: </label>\r\n                            <Field as=\"select\" name=\"workedMonth\">\r\n                                <select onChange={this.handleChange}>\r\n                                    {this.state.listOption.map((option, index) =>\r\n                                        <option key={index} value={index}>\r\n                                            {option.name}\r\n                                        </option>\r\n                                    )}\r\n                                </select>\r\n                            </Field>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"workedHours\">Worked Hours: </label>\r\n                            <Field name=\"workedHours\" type=\"text\" className={'form-control' + (errors.workedHours && touched.workedHours ? ' is-invalid' : '')} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"hourlyFee\">Hourly Fee: </label>\r\n                            <Field name=\"hourlyFee\" type=\"text\" className={'form-control' + (errors.hourlyFee && touched.hourlyFee ? ' is-invalid' : '')} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-primary mr-2\">Calculate</button>\r\n                            <button type=\"reset\" className=\"btn btn-secondary\">Reset</button>\r\n                        </div>\r\n                        <div>\r\n                            <ErrorMessage name=\"workedMonth\" component=\"div\" className=\"invalid-feedback\" />\r\n                            <ErrorMessage name=\"workedHours\" component=\"div\" className=\"invalid-feedback\" />\r\n                            <ErrorMessage name=\"hourlyFee\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        <div>\r\n                            {this.state.errorMessage}\r\n                            <br></br>\r\n                            <br></br>\r\n                        </div>\r\n                        <div>\r\n                            {this.state.dataSumbit ? <CalculatorSummary\r\n                                workedMonthName={this.state.monthName[this.state.workedMonth - 1]}\r\n                                workedHoursInMonth={this.state.workedHoursInMonth}\r\n                                workedHours={this.state.workedHours}\r\n                                hourlyFee={this.state.hourlyFee}\r\n                                overHoursAmount={this.state.overHoursAmount}\r\n                                overHoursGrossIncome={this.state.overHoursGrossIncome}\r\n                                overHoursAmount={this.state.overHoursAmount}\r\n                                overHoursNetIncome={this.state.overHoursNetIncome}\r\n                                totalGrossIncome={this.state.totalGrossIncome}\r\n                                totalNetIncome={this.state.totalNetIncome}\r\n                            /> : \"\"}\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default CalculatorInputs;"]},"metadata":{},"sourceType":"module"}