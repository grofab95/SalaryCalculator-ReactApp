{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fabian\\\\source\\\\repos\\\\SalaryCalculator\\\\salarycalulator-reactapp\\\\src\\\\components\\\\CalculatorInputs\\\\CalculatorInputs.js\";\nimport React, { Component } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport Axios from 'axios';\n\nclass CalculatorInputs extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      months: []\n    };\n\n    this.componentDidMount = () => {\n      Axios.get('hhtp://192.168.0.5:');\n    };\n  }\n\n  render() {\n    return React.createElement(Formik, {\n      initialValues: {\n        workedMonth: 0,\n        workedHours: 0,\n        hourlyFee: 0\n      },\n      validationSchema: Yup.object().shape({\n        workedMonth: Yup.string().required('Worked month is required'),\n        workedHours: Yup.string().required('Worked hours is required'),\n        hourlyFee: Yup.string().required('Hourly fee is required')\n      }),\n      onSubmit: fields => {\n        alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(fields, null, 4));\n      },\n      render: ({\n        errors,\n        status,\n        touched\n      }) => React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"workedMonth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Worked Month: \"), React.createElement(Field, {\n        name: \"workedMonth\",\n        type: \"text\",\n        className: 'form-control' + (errors.workedMonth && touched.workedMonth ? ' is-invalid' : ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"workedHours\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Wroked Hours: \"), React.createElement(Field, {\n        name: \"workedHours\",\n        type: \"text\",\n        className: 'form-control' + (errors.workedHours && touched.workedHours ? ' is-invalid' : ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"hourlyFee\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Hourly Fee: \"), React.createElement(Field, {\n        name: \"hourlyFee\",\n        type: \"text\",\n        className: 'form-control' + (errors.hourlyFee && touched.hourlyFee ? ' is-invalid' : ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary mr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Calculate\"), React.createElement(\"button\", {\n        type: \"reset\",\n        className: \"btn btn-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Reset\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(ErrorMessage, {\n        name: \"workedMonth\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(ErrorMessage, {\n        name: \"workedHours\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(ErrorMessage, {\n        name: \"hourlyFee\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default CalculatorInputs;","map":{"version":3,"sources":["C:/Users/Fabian/source/repos/SalaryCalculator/salarycalulator-reactapp/src/components/CalculatorInputs/CalculatorInputs.js"],"names":["React","Component","Formik","Field","Form","ErrorMessage","Yup","Axios","CalculatorInputs","state","months","componentDidMount","get","render","workedMonth","workedHours","hourlyFee","object","shape","string","required","fields","alert","JSON","stringify","errors","status","touched"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Axios from 'axios';\r\n\r\nclass CalculatorInputs extends Component {\r\n    state = {\r\n        months: []\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get('hhtp://192.168.0.5:')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Formik\r\n                initialValues={{\r\n                    workedMonth: 0,\r\n                    workedHours: 0,\r\n                    hourlyFee: 0\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    workedMonth: Yup.string()\r\n                        .required('Worked month is required'),\r\n                    workedHours: Yup.string()\r\n                        .required('Worked hours is required'),\r\n                    hourlyFee: Yup.string()\r\n                        .required('Hourly fee is required'),\r\n                })}\r\n                onSubmit={fields => {\r\n                    alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(fields, null, 4))\r\n                }}\r\n                render={({ errors, status, touched }) => (\r\n                    <Form>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"workedMonth\">Worked Month: </label>\r\n                            <Field name=\"workedMonth\" type=\"text\" className={'form-control' + (errors.workedMonth && touched.workedMonth ? ' is-invalid' : '')} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"workedHours\">Wroked Hours: </label>\r\n                            <Field name=\"workedHours\" type=\"text\" className={'form-control' + (errors.workedHours && touched.workedHours ? ' is-invalid' : '')} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"hourlyFee\">Hourly Fee: </label>\r\n                            <Field name=\"hourlyFee\" type=\"text\" className={'form-control' + (errors.hourlyFee && touched.hourlyFee ? ' is-invalid' : '')} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-primary mr-2\">Calculate</button>\r\n                            <button type=\"reset\" className=\"btn btn-secondary\">Reset</button>\r\n                        </div>\r\n                        <div>\r\n                            <ErrorMessage name=\"workedMonth\" component=\"div\" className=\"invalid-feedback\" />\r\n                            <ErrorMessage name=\"workedHours\" component=\"div\" className=\"invalid-feedback\" />\r\n                            <ErrorMessage name=\"hourlyFee\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default CalculatorInputs;"]},"metadata":{},"sourceType":"module"}