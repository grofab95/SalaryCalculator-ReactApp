{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fabian\\\\source\\\\repos\\\\SalaryCalculator\\\\salarycalulator-reactapp\\\\src\\\\components\\\\CalculatorInputs\\\\CalculatorInputs.js\";\nimport React, { Component } from 'react';\nimport Axios from 'axios';\nimport './CalculatorInputs.css';\nimport CalculatorForm from '../CalculatorForm/CalculatorForm';\nimport CalculatorSummary from '../CalculatorSummary/CalculatorSummary';\nimport { isNullOrUndefined } from 'util';\n\nclass CalculatorInputs extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      monthsWorkingHours: [],\n      workingHoursInMonth: 0,\n      errorMessage: '',\n      isSummaryVisible: false,\n      workedMonth: 1,\n      overHoursAmount: 0,\n      overHoursGrossIncome: 0,\n      overHoursNetIncome: 0,\n      totalGrossIncome: 0,\n      totalNetIncome: 0,\n      monthName: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n    };\n\n    this.componentDidMount = () => {\n      Axios.get('http://192.168.0.5:5000/SalaryCalculator').then(response => {\n        this.setState({\n          monthsWorkingHours: response.data\n        });\n      });\n    };\n\n    this.handleSelectChange = selectedValue => {\n      this.setState({\n        workedMonth: parseInt(selectedValue) + 1\n      });\n    };\n\n    this.handleSubmitForm = formFields => {\n      console.log(formFields);\n      this.setState({\n        errorMessage: null,\n        isSummaryVisible: false\n      });\n      formFields.workedHours = parseInt(formFields.workedHoursInput);\n      formFields.hourlyFee = parseInt(formFields.hourlyFeeInput);\n      Axios.post('http://192.168.0.5:5000/salarycalculator', formFields).then(response => {\n        console.log(response.data);\n        this.setState({\n          isSummaryVisible: true,\n          workedHours: formFields.workedHoursInput,\n          hourlyFee: formFields.hourlyFeeInput,\n          overHoursAmount: response.data.overHoursAmount,\n          overHoursGrossIncome: response.data.overHoursGrossIncome,\n          overHoursNetIncome: response.data.overHoursNetIncome,\n          totalGrossIncome: response.data.totalGrossIncome,\n          totalNetIncome: response.data.totalNetIncome\n        });\n      }).catch(error => {\n        if (!isNullOrUndefined(error.response.data.message)) {\n          this.setState({\n            errorMessage: error.response.data.message\n          });\n        }\n\n        console.log(error.response);\n      });\n    };\n\n    this.handleReset = () => {\n      this.setState({\n        errorMessage: null,\n        isSummaryVisible: false\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Salary Calculator\"), React.createElement(CalculatorForm, {\n      monthName: this.state.monthName,\n      errorMessage: this.state.errorMessage,\n      monthsWorkingHours: this.state.monthsWorkingHours,\n      handleSubmitForm: this.handleSubmitForm,\n      handleReset: this.handleReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), this.state.isSummaryVisible ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(CalculatorSummary, {\n      workedMonthName: this.state.monthName[this.state.workedMonth - 1],\n      workingHoursInMonth: this.state.monthsWorkingHours[this.state.workedMonth - 1],\n      workedHours: this.state.workedHours,\n      hourlyFee: this.state.hourlyFee,\n      overHoursAmount: this.state.overHoursAmount,\n      overHoursGrossIncome: this.state.overHoursGrossIncome,\n      overHoursNetIncome: this.state.overHoursNetIncome,\n      totalGrossIncome: this.state.totalGrossIncome,\n      totalNetIncome: this.state.totalNetIncome,\n      handleCloseSummary: this.handleCloseSummary,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })) : \"\");\n  }\n\n}\n\nexport default CalculatorInputs;","map":{"version":3,"sources":["C:/Users/Fabian/source/repos/SalaryCalculator/salarycalulator-reactapp/src/components/CalculatorInputs/CalculatorInputs.js"],"names":["React","Component","Axios","CalculatorForm","CalculatorSummary","isNullOrUndefined","CalculatorInputs","state","monthsWorkingHours","workingHoursInMonth","errorMessage","isSummaryVisible","workedMonth","overHoursAmount","overHoursGrossIncome","overHoursNetIncome","totalGrossIncome","totalNetIncome","monthName","componentDidMount","get","then","response","setState","data","handleSelectChange","selectedValue","parseInt","handleSubmitForm","formFields","console","log","workedHours","workedHoursInput","hourlyFee","hourlyFeeInput","post","catch","error","message","handleReset","render","handleCloseSummary"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Axios from 'axios';\r\nimport './CalculatorInputs.css';\r\n\r\nimport CalculatorForm from '../CalculatorForm/CalculatorForm';\r\nimport CalculatorSummary from '../CalculatorSummary/CalculatorSummary';\r\nimport { isNullOrUndefined } from 'util';\r\nclass CalculatorInputs extends Component {\r\n    state = {\r\n        monthsWorkingHours: [],\r\n        workingHoursInMonth: 0,\r\n        errorMessage: '',\r\n        isSummaryVisible: false,\r\n        workedMonth: 1,\r\n        overHoursAmount: 0,\r\n        overHoursGrossIncome: 0,\r\n        overHoursNetIncome: 0,\r\n        totalGrossIncome: 0,\r\n        totalNetIncome: 0,\r\n        monthName: [\r\n            'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'\r\n        ]\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        Axios.get('http://192.168.0.5:5000/SalaryCalculator')\r\n            .then(response => {\r\n                this.setState({ monthsWorkingHours: response.data })\r\n            })\r\n    }\r\n\r\n    handleSelectChange = (selectedValue) => {\r\n        this.setState({\r\n            workedMonth: parseInt(selectedValue) + 1\r\n        });\r\n    }\r\n\r\n    handleSubmitForm = (formFields) => {\r\n        console.log(formFields);\r\n        this.setState({\r\n            errorMessage: null,\r\n            isSummaryVisible: false\r\n        });\r\n        formFields.workedHours = parseInt(formFields.workedHoursInput);\r\n        formFields.hourlyFee = parseInt(formFields.hourlyFeeInput);\r\n        Axios.post('http://192.168.0.5:5000/salarycalculator', formFields)\r\n            .then(response => {\r\n                console.log(response.data)\r\n                this.setState({\r\n                    isSummaryVisible: true,\r\n                    workedHours: formFields.workedHoursInput,\r\n                    hourlyFee: formFields.hourlyFeeInput,\r\n                    overHoursAmount: response.data.overHoursAmount,\r\n                    overHoursGrossIncome: response.data.overHoursGrossIncome,\r\n                    overHoursNetIncome: response.data.overHoursNetIncome,\r\n                    totalGrossIncome: response.data.totalGrossIncome,\r\n                    totalNetIncome: response.data.totalNetIncome\r\n                })\r\n            })\r\n            .catch(error => {\r\n                if (!isNullOrUndefined(error.response.data.message)) {\r\n                    this.setState({ errorMessage: error.response.data.message })\r\n                }\r\n                console.log(error.response);\r\n            })\r\n\r\n    }\r\n\r\n    handleReset = () => {\r\n        this.setState({\r\n            errorMessage: null,\r\n            isSummaryVisible: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Salary Calculator</h1>\r\n                <CalculatorForm\r\n                    monthName={this.state.monthName}\r\n                    errorMessage={this.state.errorMessage}\r\n                    monthsWorkingHours={this.state.monthsWorkingHours}\r\n                    handleSubmitForm={this.handleSubmitForm}\r\n                    handleReset={this.handleReset}\r\n                />\r\n                {this.state.isSummaryVisible ?\r\n                    <div>\r\n                        <CalculatorSummary\r\n                            workedMonthName={this.state.monthName[this.state.workedMonth - 1]}\r\n                            workingHoursInMonth={this.state.monthsWorkingHours[this.state.workedMonth - 1]}\r\n                            workedHours={this.state.workedHours}\r\n                            hourlyFee={this.state.hourlyFee}\r\n                            overHoursAmount={this.state.overHoursAmount}\r\n                            overHoursGrossIncome={this.state.overHoursGrossIncome}\r\n                            overHoursNetIncome={this.state.overHoursNetIncome}\r\n                            totalGrossIncome={this.state.totalGrossIncome}\r\n                            totalNetIncome={this.state.totalNetIncome}\r\n                            handleCloseSummary={this.handleCloseSummary}\r\n                        />\r\n                    </div>\r\n                    : \"\"}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CalculatorInputs;"]},"metadata":{},"sourceType":"module"}