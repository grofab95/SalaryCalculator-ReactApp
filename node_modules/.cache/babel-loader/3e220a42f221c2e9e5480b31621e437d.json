{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Fabian\\\\source\\\\repos\\\\SalaryCalculator\\\\salarycalulator-reactapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Fabian\\\\source\\\\repos\\\\SalaryCalculator\\\\salarycalulator-reactapp\\\\src\\\\components\\\\CalculatorInputs\\\\CalculatorInputs.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport Axios from 'axios';\nimport CalculatorSummary from '../CalculatorSummary/CalculatorSummary';\n\nclass CalculatorInputs extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      errorMessage: '',\n      dataSumbit: false,\n      summary: {\n        overHoursAmount: 0,\n        overHoursGrossIncome: 0,\n        overHoursNetIncome: 0,\n        totalGrossIncome: 0,\n        totalNetIncome: 0\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(Formik, {\n      initialValues: {\n        workedMonth: 1,\n        workedHours: 0,\n        hourlyFee: 0\n      },\n      validationSchema: Yup.object().shape({\n        workedHours: Yup.string().required('Worked hours is required'),\n        hourlyFee: Yup.string().required('Hourly fee is required')\n      }),\n      onSubmit: fields => {\n        let intFields = _objectSpread({}, fields);\n\n        intFields.workedHours = parseInt(intFields.workedHours);\n        intFields.hourlyFee = parseInt(intFields.hourlyFee);\n        Axios.post('http://192.168.0.5:5000/salarycalculator', intFields).then(response => {\n          //console.log(response.data)\n          this.setState({\n            dataSumbit: true,\n            summary: response.data\n          });\n        }).catch(error => {\n          this.setState({\n            errorMessage: error.response.data.message\n          });\n        });\n        this.setState({\n          dataSumbit: true\n        });\n      },\n      render: ({\n        errors,\n        status,\n        touched\n      }) => React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"workedMonth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Worked Month: \"), React.createElement(Field, {\n        as: \"select\",\n        name: \"workedMonth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Stycze\\u0144\"), React.createElement(\"option\", {\n        value: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Luty\"), React.createElement(\"option\", {\n        value: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Marzec\"), React.createElement(\"option\", {\n        value: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Kwiecie\\u0144\"), React.createElement(\"option\", {\n        value: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Maj\"), React.createElement(\"option\", {\n        value: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Czerwiec\"), React.createElement(\"option\", {\n        value: \"7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Lipiec\"), React.createElement(\"option\", {\n        value: \"8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Sierpie\\u0144\"), React.createElement(\"option\", {\n        value: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Wrzesie\\u0144\"), React.createElement(\"option\", {\n        value: \"10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Pa\\u017Adziernik\"), React.createElement(\"option\", {\n        value: \"11\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Listopad\"), React.createElement(\"option\", {\n        value: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Grudzie\\u0144\"))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"workedHours\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Worked Hours: \"), React.createElement(Field, {\n        name: \"workedHours\",\n        type: \"text\",\n        className: 'form-control' + (errors.workedHours && touched.workedHours ? ' is-invalid' : ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"hourlyFee\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Hourly Fee: \"), React.createElement(Field, {\n        name: \"hourlyFee\",\n        type: \"text\",\n        className: 'form-control' + (errors.hourlyFee && touched.hourlyFee ? ' is-invalid' : ''),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary mr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Calculate\"), React.createElement(\"button\", {\n        type: \"reset\",\n        className: \"btn btn-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Reset\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(ErrorMessage, {\n        name: \"workedMonth\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(ErrorMessage, {\n        name: \"workedHours\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(ErrorMessage, {\n        name: \"hourlyFee\",\n        component: \"div\",\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, this.state.errorMessage, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, this.state.dataSumbit ? React.createElement(CalculatorSummary, {\n        summary: this.props.summary,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }) : \"\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default CalculatorInputs;","map":{"version":3,"sources":["C:/Users/Fabian/source/repos/SalaryCalculator/salarycalulator-reactapp/src/components/CalculatorInputs/CalculatorInputs.js"],"names":["React","Component","Formik","Field","Form","ErrorMessage","Yup","Axios","CalculatorSummary","CalculatorInputs","state","errorMessage","dataSumbit","summary","overHoursAmount","overHoursGrossIncome","overHoursNetIncome","totalGrossIncome","totalNetIncome","render","workedMonth","workedHours","hourlyFee","object","shape","string","required","fields","intFields","parseInt","post","then","response","setState","data","catch","error","message","errors","status","touched","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Axios from 'axios';\r\n\r\nimport CalculatorSummary from '../CalculatorSummary/CalculatorSummary'\r\n\r\nclass CalculatorInputs extends Component {\r\n    state = {\r\n        errorMessage: '',\r\n        dataSumbit: false,\r\n        summary: {\r\n            overHoursAmount: 0,\r\n            overHoursGrossIncome: 0,\r\n            overHoursNetIncome: 0,\r\n            totalGrossIncome: 0,\r\n            totalNetIncome: 0\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Formik\r\n                initialValues={{\r\n                    workedMonth: 1,\r\n                    workedHours: 0,\r\n                    hourlyFee: 0\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    workedHours: Yup.string()\r\n                        .required('Worked hours is required'),\r\n                    hourlyFee: Yup.string()\r\n                        .required('Hourly fee is required'),\r\n                })}\r\n                onSubmit={fields => {\r\n                    let intFields = {\r\n                        ...fields\r\n                    };\r\n\r\n                    intFields.workedHours = parseInt(intFields.workedHours);\r\n                    intFields.hourlyFee = parseInt(intFields.hourlyFee);\r\n                    \r\n                    Axios.post('http://192.168.0.5:5000/salarycalculator', intFields)\r\n                        .then(response => {\r\n                            //console.log(response.data)\r\n                            this.setState({\r\n                                dataSumbit: true,\r\n                                summary: response.data\r\n                            })\r\n                        })\r\n                        .catch(error => {\r\n                            this.setState({ errorMessage: error.response.data.message })\r\n                        })\r\n                    this.setState({ dataSumbit: true });\r\n                }}\r\n                render={({ errors, status, touched }) => (\r\n                    <Form>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"workedMonth\">Worked Month: </label>\r\n                            <Field as=\"select\" name=\"workedMonth\">\r\n                                <option value=\"1\">Styczeń</option>\r\n                                <option value=\"2\">Luty</option>\r\n                                <option value=\"3\">Marzec</option>\r\n                                <option value=\"4\">Kwiecień</option>\r\n                                <option value=\"5\">Maj</option>\r\n                                <option value=\"6\">Czerwiec</option>\r\n                                <option value=\"7\">Lipiec</option>\r\n                                <option value=\"8\">Sierpień</option>\r\n                                <option value=\"9\">Wrzesień</option>\r\n                                <option value=\"10\">Październik</option>\r\n                                <option value=\"11\">Listopad</option>\r\n                                <option value=\"12\">Grudzień</option>\r\n                            </Field>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"workedHours\">Worked Hours: </label>\r\n                            <Field name=\"workedHours\" type=\"text\" className={'form-control' + (errors.workedHours && touched.workedHours ? ' is-invalid' : '')} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"hourlyFee\">Hourly Fee: </label>\r\n                            <Field name=\"hourlyFee\" type=\"text\" className={'form-control' + (errors.hourlyFee && touched.hourlyFee ? ' is-invalid' : '')} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <button type=\"submit\" className=\"btn btn-primary mr-2\">Calculate</button>\r\n                            <button type=\"reset\" className=\"btn btn-secondary\">Reset</button>\r\n                        </div>\r\n                        <div>\r\n                            <ErrorMessage name=\"workedMonth\" component=\"div\" className=\"invalid-feedback\" />\r\n                            <ErrorMessage name=\"workedHours\" component=\"div\" className=\"invalid-feedback\" />\r\n                            <ErrorMessage name=\"hourlyFee\" component=\"div\" className=\"invalid-feedback\" />\r\n                        </div>\r\n                        <div>\r\n                            {this.state.errorMessage}\r\n                            <br></br>\r\n                            <br></br>\r\n                        </div>\r\n                        <div>\r\n                            {this.state.dataSumbit ? <CalculatorSummary summary={this.props.summary}/> : \"\"}\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default CalculatorInputs;"]},"metadata":{},"sourceType":"module"}